---
# This playbook updates and upgrades an OPNsense firewall using the API.

- name: Update and upgrade OPNsense firewall
  hosts: opnsense_firewalls  # Target group of OPNsense firewalls
  become: true  # Run tasks with elevated privileges

  vars:
    opnsense_api_credentials_file: /home/manu/.secret/opnsense_landstr.key  # Path to the file containing API credentials

  tasks:
    # Read API credentials from the INI file
    - name: Read API credentials from file
      ansible.builtin.ini_file:
        path: "{{ opnsense_api_credentials_file }}"
        section: ""  # Credentials are in the default section
      register: opnsense_api_credentials  # Store the extracted credentials

    # Update the package repository list
    - name: Run pkg update
      ansibleguy.opnsense.package:
        action: 'update'
        api_key: "{{ opnsense_api_credentials.key }}"
        api_secret: "{{ opnsense_api_credentials.secret }}"

    # Check for available package upgrades (dry-run)
    - name: Check for updates
      ansibleguy.opnsense.package:
        action: 'upgrade'
        api_key: "{{ opnsense_api_credentials.key }}"
        api_secret: "{{ opnsense_api_credentials.secret }}"
        dry_run: True
      register: pkg_upgrade_check_result  # Store the result of the command

    # Display the list of available updates
    - name: Display available updates
      debug:
        msg: "{{ pkg_upgrade_check_result.data }}"  # Print the output of the upgrade check

    # Upgrade packages if updates are available
    - name: Upgrade packages
      ansibleguy.opnsense.package:
        action: 'upgrade'
        api_key: "{{ opnsense_api_credentials.key }}"
        api_secret: "{{ opnsense_api_credentials.secret }}"
      when: pkg_upgrade_check_result.data != []  # Only run if there are updates

    # Reboot the firewall to apply updates
    - name: Reboot OPNsense firewall
      ansibleguy.opnsense.package:
        action: 'reboot'
        api_key: "{{ opnsense_api_credentials.key }}"
        api_secret: "{{ opnsense_api_credentials.secret }}"
      when: pkg_upgrade_check_result.data != []  # Only run if there are updates